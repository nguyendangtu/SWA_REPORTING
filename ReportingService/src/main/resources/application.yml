spring:
  application:
    name: ReportingService

  data:
    mongodb:
      host: localhost
      port: 27017
      database: reportingservice
  zipkin:
    base-url: http://localhost:9411/

  cloud:
    config:
      url: http://localhost:8888

  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: gid
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: kafka
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

sleuth:
  sampler:
    probability: 1 #100% (default = 10%)

eureka:
  instance:
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    service-url:
      defaultZone: http://localhost:8761/eureka/

#app:
#  topic:
#    nsi-topic-names: NSI.*

#logging:
#  level:
#    root: ERROR
#org:
#  springframework: ERROR

---
spring:
  profiles: ReportingService1
server:
  port: 8092

---
spring:
  profiles: ReportingService2
server:
  port: 8093
